<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/toolbar_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/Theme.OC_P9_kotlin.AppBarOverlay"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="?attr/colorPrimary"
            app:popupTheme="@style/Theme.OC_P9_kotlin.PopupOverlay" />

    </com.google.android.material.appbar.AppBarLayout>

    <!-- <include layout="@layout/content_main" /> -->

    <!-- two_pane.xml -->
    <androidx.slidingpanelayout.widget.SlidingPaneLayout
        android:id="@+id/sliding_pane_layout"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toBottomOf="@id/toolbar_layout">

        <!-- The first child view becomes the left pane. When the combined
             desired width (expressed using android:layout_width) would
             not fit on-screen at once, the right pane is permitted to
             overlap the left. -->
        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/list_recycler_view"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_gravity="start"
            tools:listitem="@layout/item_estate_layout" />

        <!-- The second child becomes the right (content) pane. In this
             example, android:layout_weight is used to expand this detail pane
             to consume leftover available space when the
             the entire window is wide enough to fit both the left and right pane.-->
        <androidx.fragment.app.FragmentContainerView
            android:id="@+id/detail_container"
            android:name="com.example.oc_p9_kotlin.DetailsFragment"
            android:layout_width="300dp"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:background="#ff333333"
            tools:layout="@layout/fragment_details" />
    </androidx.slidingpanelayout.widget.SlidingPaneLayout>


    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom|end"
        android:layout_marginEnd="@dimen/fab_margin"
        android:layout_marginBottom="16dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:srcCompat="@android:drawable/ic_dialog_email" />

</androidx.constraintlayout.widget.ConstraintLayout>